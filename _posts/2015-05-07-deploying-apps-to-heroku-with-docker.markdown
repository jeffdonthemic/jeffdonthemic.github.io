---
layout: post
title:  Deploying Apps to Heroku with Docker
description: Yesterday Heroku released beta support to build and deploy Heroku apps with Docker  . It would be an understatement to say that this created quite a bit of buzz inside Appirio . We are big fans of Docker and have been  promoting it for all types of uses, blogging about it  and using it for our topcoder challenges. With so many developers on the topcoder platform (750,000+), Docker mitigates environment issues involved with launching challenges, evaluating submissions and putting code into produc
date: 2015-05-07 17:56:14 +0300
image:  '/images/heroku-docker-thanks.png'
tags:   ["2015", "public"]
---
<p>Yesterday Heroku released beta support to <a href="https://blog.heroku.com/archives/2015/5/5/introducing_heroku_docker_release_build_deploy_heroku_apps_with_docker">build and deploy Heroku apps with Docker</a>. It would be an understatement to say that this created quite a bit of buzz inside <a href="http://appirio.com/">Appirio</a>. We are big fans of Docker and have been <a href="https://success.salesforce.com/ideaView?id=08730000000kxA1AAI">promoting it</a> for all types of uses, <a href="https://www.topcoder.com/blog/deploying-go-apps-with-docker-to-elastic-beanstalk">blogging about it</a> and using it for our topcoder challenges. With so many developers on the topcoder platform (750,000+), Docker mitigates environment issues involved with launching challenges, evaluating submissions and putting code into production.</p>
<p>Since Heroku has their own LXC container technology, we didn’t expect them to adopt Docker this soon… if at all. We are <strong>super-excited</strong> to see Heroku starting to support Docker! The service is still beta, only supporting Node.js and Ruby for now (more languages to come), but looks promising.</p>
<p>The <a href="https://blog.heroku.com/archives/2015/5/5/introducing_heroku_docker_release_build_deploy_heroku_apps_with_docker">announcement blog post</a> does a good job of walking you through the new functionality but assumes that you have a strong grasp of Docker and your installation is up to date. A number of my teammates had issues with Docker Hub and getting their containers to run on Heroku but these are Docker problems, not Heroku’s.</p>
<p>If you are new to Docker and running OSX, try installing <a href="https://kitematic.com/">Kitematic</a> or use <a href="https://docs.docker.com/installation/mac/">this page to install Docker</a> and <a href="https://github.com/boot2docker/osx-installer/releases/tag/v1.6.0">Boot2Docker</a>. You can download Docker for <a href="http://docs.docker.com/installation/">other platforms here</a>. If you already have a version of Docker installed, I would highly recommend that you upgrade your client and server. You’ll probably need to update your virtual machine as well so check out <a href="https://github.com/boot2docker/osx-installer/releases/tag/v1.1.0">these instructions</a>. It’s pretty simple.</p>
<p>With everything installed/updated you should be able to run <code>boot2docker up</code> which will fire up Docker and your VM. Now you’re all set to follow Heroku’s blog post to deploy your container to their platform.</p>
<p>Heroku’s Docker toolbelt plugin makes <a href="https://docs.docker.com/userguide/dockerizing/">dockerizing</a> apps a breeze. You can run <code>heroku docker:init</code> in your app’s directory and the CLI will try to detect what language and framework is used for your app and in what versions, and write the appropriate Dockerfile for you! Feel free to make modifications and rebuild your images as necessary.</p>
<p>A simple <code>heroku docker:start</code> fires up your app locally in the virtual machine and returns an accessible IP address. You can then do all sorts of crazy stuff like installing dependencies with <code>heroku docker:exec</code> and modifying your app in real-time against the virtual machine (it mounts a working directory) before deploying to Heroku.</p>
<p>Once again, Heroku has made deployment a snap. When you run <code>heroku docker:release</code>, the CLI will create a slug from your local Docker image and deploy it to Heroku. You can still use <code>git push</code> as well if you like watching the buildpack logs. Who doesn’t?!</p>
<p>Overall, this is a good start. I’m not sure how much I like the being forced into Heroku’s <code>/app</code> structure but I can understand the need for it. It will be exciting to see how their support progresses in the near term. Over the past six months Heroku has made it much simpler to deploy apps with <a href="https://blog.heroku.com/archives/2015/2/6/heroku_github_integration">options from github</a> and <a href="https://blog.heroku.com/archives/2014/11/19/announcing_beta_dropbox_sync">Dropbox</a> and now Docker!</p>
<p><a href="https://www.topcoder.com/blog/deploying-apps-to-heroku-with-docker/">Cross-posted from topcoder.</a></p>

