---
layout: post
title:  Google Wave Robot API v2
description: Apparently Google Wave is not dead. Google just released new functionality with the post Introducing Robots API v2- The Rise of Active Robots . These new features include-  Active API- In v2, robots can now push information into waves (without having to wait to respond to a user action). This replaces the need for our deprecated cron API, as now you can update a wave when the weather changes or the stock price falls below some threshold. You can learn more in the Active API docs. This is a great
date: 2010-03-02 18:00:00 +0300
image:  '/images/slugs/google-wave-robot-api-v2.jpg'
tags:   ["2010", "public"]
---
<p style="clear: both">Apparently Google Wave is not dead. Google just released new functionality with the post <a href="http://www.masteringwave.com/2010/03/new-google-wave-robot-api-v2/">Introducing Robots API v2: The Rise of Active Robots</a>. These new features include:</p><blockquote style="clear: both"><p><strong>Active API</strong>: In v2, robots can now push information into waves (without having to wait to respond to a user action). This replaces the need for our deprecated cron API, as now you can update a wave when the weather changes or the stock price falls below some threshold. You can learn more in the Active API docs.</p></blockquote><p style="clear: both">This is a great new feature that allows robots to act independently of the wave. This allows Wave to receive notifications and messages with external events occur. Similar to Chatter, if a record is updated in Salesforce.com, this message can be pushed to all recipients in the wave.</p><blockquote style="clear: both"><p><strong>Context</strong>: Robots can now more precisely specify how much information they want to get back from a particular event. If only the contents of the affected blip needs updating and you want to reduce your robot's bandwidth, then you can specify the new 'SELF' context. On the flip side, if you do need all the information in the wavelet, you can specify the new 'ALL' context. You can learn more in the Context docs.</p></blockquote><p style="clear: both">The new Contexts provide much granular control of the wave and how a robot interacts with it: </p><p style="clear: both"><ul style="clear: both"><li>PARENT indicates that the event should pass the parent data. Note that PARENT makes no difference to Wavelet events.</li><li>CHILDREN indicates that the event should pass any children of the event's level. For Wavelets, this context passes all child Blips.</li><li>ALL indicates that the event passes all associated data.</li><li>SIBLINGS indicates that the event passes any siblings. For Blips, this context will pass data for all sibling blips within the Wavelet.</li><li>SELF indicates that the event only passes information pertaining to itself.</li><li>ROOT indicates that the event only passes information pertaining to the root blip.</li></ul></p><blockquote style="clear: both"><p><strong>Filtering</strong>: In a similar way, with this new API, the robot can specify what events it needs to respond to, conserving valuable bandwidth -- and ignore all those that don't apply. You can learn more in the Filtering Events docs.</p></blockquote><p style="clear: both">This new feature is great for programmers allowing them respond to events based up regular expressions.</p><blockquote style="clear: both"><p><strong>Error reporting</strong>: Robots are now able to register to receive errors about failed operations, such as insertion on non-existent ranges. You can learn more in the Error Reporting docs.</p></blockquote><p style="clear: both">You can now handle exception more gracefully and interact with users in a more user-friendly manner.</p><blockquote style="clear: both"><p><strong>Proxying-For</strong>: Robots can now convey to Google Wave that their actions are actually on behalf of a different user, via the proxyingFor field. For robots like the Buggy sample, which connects with the Google Code issue tracker, this means that the wave can be updated with attribution to users on non-wave systems. You can learn more in the Proxying-For docs.</p></blockquote><p style="clear: both">This new features allow your robot to "impersonate" a named user on another system. So if you wave needs to insert records into an external system, it can do so as a specific user.</p><p style="clear: both">These new features will make robots more user friendly and easier to use. I just hope they implement a way to restrict a robot to a specific domain.</p><br class="final-break" style="clear: both" />
